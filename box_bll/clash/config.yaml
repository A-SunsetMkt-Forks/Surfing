mixed-port: 7890
redir-port: 7891
tproxy-port: 1536
mode: Rule
allow-lan: true
geodata-mode: true
geo-auto-update: true
geo-update-interval: 24
geox-url:
  geoip: "https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geoip.dat"
  geosite: "https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geosite.dat"
unified-delay: true
tcp-concurrent: true
enable-process: true
log-level: silent
find-process-mode: always
global-client-fingerprint: chrome
external-controller: 0.0.0.0:9090
#面板默认 Meta 可选 Yacd / Zash 重启模块即可加载
external-ui: /data/adb/box_bll/panel/Meta/
secret: ""

#####################
#修改配置文件保存时，建议重启模块服务/重载配置.
#####################

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "Mijia Cloud"

tun:
  enable: true #true 开 #false 关
  device: meta
  stack: system
  dns-hijack:
    - any:53
    - tcp://any:53
  auto-route: true
  strict-route: true
  auto-redirect: false
  auto-detect-interface: true
  route-exclude-address:
  - 192.168.0.0/16
  - fc00::/7
  exclude-package:
  - com.tencent.mm
  - com.tencent.tmgp.sgame
  - com.ss.android.ugc.aweme
  - com.xiaomi.market
  - com.android.providers.downloads.ui

dns:
  enable: true
  prefer-h3: true
  ipv6: true
  listen: 0.0.0.0:1053
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.0/15
  fake-ip-filter:
    - "*"
    - "+.lan"
    - "connect.rom.miui.com"
    - "localhost.ptlogin2.qq.com"
    - "*.market.xiaomi.com"
  default-nameserver:
    - 119.29.29.29
    - 223.6.6.6
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query

# 订阅地址
# 如有多个地址请使用订阅转换工具合并，具体Google
# 请至控制面板手动刷新更新
p: &p
  {type: http, url: "引号内填写你的订阅地址", interval: 21600, health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 300}}

proxies:
  - {name: 🌎 全球直连, type: direct, udp: true}
  - {name: 🌐 DNS_Hijack, type: dns}
proxy-providers:
  HongKong:
    <<: *p
    filter: "^(?=.*(港|HK|hk|Hong Kong|HongKong|hongkong))(?!.*(灾|网易|Netease)).*"
    path: ./proxy_providers/HongKong.yaml
  Japan:
    <<: *p
    filter: "^(?=.*(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan))(?!.*(灾|网易|Netease)).*"
    path: ./proxy_providers/Japan.yaml
  America:
    <<: *p
    filter: "^(?=.*(美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States))(?!.*(灾|网易|Netease)).*"
    path: ./proxy_providers/America.yaml
  Taiwan:
    <<: *p
    filter: "^(?=.*(台|新北|彰化|TW|Taiwan))(?!.*(灾|网易|Netease)).*"
    path: ./proxy_providers/Taiwan.yaml
  Singapore:
    <<: *p
    filter: "^(?=.*(新加坡|坡|狮城|SG|Singapore))(?!.*(灾|网易|Netease)).*"
    path: ./proxy_providers/Singapore.yaml
  Resilience:
    <<: *p
    filter: "^(?=.*(灾))(?!.*(网易|Netease)).*"
    path: ./proxy_providers/Resilience.yaml
  All: 
    <<: *p
    filter: "^(?!.*(网易|订阅|群|账户|流量|有效期|时间|官网)).*$"
    path: ./proxy_providers/All.yaml
  Neteasemusic: 
    <<: *p
    filter: "(Netease)"
    path: ./proxy_providers/Neteasemusic.yaml

proxy-groups:
  - {name: 🎯 总模式, type: select, proxies: [🚀 节点选择, ♻️ 延迟最低, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🌎 全球直连]}
  - {name: 🚀 节点选择, type: select, proxies: [♻️ 延迟最低,🌎 全球直连], use: [All]}
  - {name: ♻️ 延迟最低, type: url-test, use: [All]}
  - {name: ♻️ 手动切换1, type: select, proxies: [🚀 节点选择,🌎 全球直连], use: [All]}
  - {name: 📲 电报信息, type: select, proxies: [🎯 总模式, ♻️ 延迟最低, 🚀 节点选择, ♻️ 手动切换1, 🇸🇬 狮城节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🌎 全球直连]}
  - {name: 🤖 OpenAI, type: select, proxies: [🎯 总模式, ♻️ 延迟最低, 🚀 节点选择, ♻️ 手动切换1, 🇸🇬 狮城节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🌎 全球直连]}
  - {name: 🎬 油管媒体, type: select, proxies: [🎯 总模式, ♻️ 延迟最低, 🚀 节点选择, ♻️ 手动切换1, 🇸🇬 狮城节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🌎 全球直连]}
  - {name: 📸 TikTok, type: select, proxies: [🎯 总模式, ♻️ 延迟最低, 🚀 节点选择, ♻️ 手动切换1, 🇸🇬 狮城节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🌎 全球直连]}
  - {name: 📱 脸书社交, type: select, proxies: [🎯 总模式, ♻️ 延迟最低, 🚀 节点选择, ♻️ 手动切换1, 🇸🇬 狮城节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🌎 全球直连]}
  - {name: 📹 奈飞媒体, type: select, proxies: [🎯 总模式, ♻️ 延迟最低, 🚀 节点选择, ♻️ 手动切换1, 🇸🇬 狮城节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🌎 全球直连]}
  - {name: 📢 谷歌服务, type: select, proxies: [🎯 总模式, ♻️ 延迟最低, 🚀 节点选择, ♻️ 手动切换1, 🇸🇬 狮城节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🌎 全球直连]}
  - {name: 🎮 Discord, type: select, proxies: [🎯 总模式, ♻️ 延迟最低, 🚀 节点选择, ♻️ 手动切换1, 🇸🇬 狮城节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🌎 全球直连]}
  - {name: Ⓜ️ 微软服务, type: select, proxies: [🌎 全球直连, 🎯 总模式, ♻️ 延迟最低, 🚀 节点选择, ♻️ 手动切换1, 🇸🇬 狮城节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇯🇵 日本节点, 🇺🇲 美国节点]}   
  - {name: 🍎 苹果服务, type: select, proxies: [🌎 全球直连, 🎯 总模式, ♻️ 延迟最低, 🚀 节点选择, ♻️ 手动切换1, 🇸🇬 狮城节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇯🇵 日本节点, 🇺🇲 美国节点]}
  - {name: 🎹 网易音乐, type: select, proxies: [🌎 全球直连], use: [Neteasemusic]}
  - {name: 🛑 广告拦截, type: select, proxies: [REJECT, 🌎 全球直连]}
  - {name: 🐋 漏网之鱼, type: select, proxies: [🎯 总模式, ♻️ 延迟最低, 🚀 节点选择, ♻️ 手动切换1, 🇸🇬 狮城节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🌎 全球直连]}
  - {name: 🇭🇰 香港节点, type: url-test, use: [HongKong]}
  - {name: 🇯🇵 日本节点, type: url-test, use: [Japan]}
  - {name: 🇺🇲 美国节点, type: url-test, use: [America]}
  - {name: 🇨🇳 台湾节点, type: url-test, use: [Taiwan]}
  - {name: 🇸🇬 狮城节点, type: url-test, use: [Singapore]}

RuleDefault: &RuleDefault
  {type: http, behavior: classical, format: text, interval: 86400}

rule-providers:
  TikTok:
    type: http
    behavior: classical
    format: yaml
    path: ./rule/TikTok.yaml
    url: "https://raw.githubusercontent.com/MoGuangYu/rules/main/Home/TikTok.yaml"
    interval: 86400
  Facebook:
    type: http
    behavior: classical
    format: yaml
    path: ./rule/Facebook.yaml
    url: "https://raw.githubusercontent.com/MoGuangYu/rules/main/Home/Facebook.yaml"
    interval: 86400
  Telegram:
    type: http
    behavior: classical
    format: yaml
    path: ./rule/Telegram.yaml
    url: "https://raw.githubusercontent.com/MoGuangYu/rules/main/Home/Telegram.yaml"
    interval: 86400
  YouTube:
    type: http
    behavior: classical
    format: yaml
    path: ./rule/YouTube.yaml
    url: "https://raw.githubusercontent.com/MoGuangYu/rules/main/Home/YouTube.yaml"
    interval: 86400
  Google:
    type: http
    behavior: classical
    format: yaml
    path: ./rule/Google.yaml
    url: "https://raw.githubusercontent.com/MoGuangYu/rules/main/Home/Google.yaml"
    interval: 86400
  Microsoft:
    type: http
    behavior: classical
    format: yaml
    path: ./rule/Microsoft.yaml
    url: "https://raw.githubusercontent.com/MoGuangYu/rules/main/Home/Microsoft.yaml"
    interval: 86400
  Apple:
    type: http
    behavior: classical
    format: yaml
    path: ./rule/Apple.yaml
    url: "https://raw.githubusercontent.com/MoGuangYu/rules/main/Home/Apple.yaml"
    interval: 86400
  OpenAI:
    type: http
    behavior: classical
    format: yaml
    path: ./rule/OpenAI.yaml
    url: "https://raw.githubusercontent.com/MoGuangYu/rules/main/Home/OpenAI.yaml"
    interval: 86400
  Netflix:
    type: http
    behavior: classical
    format: yaml
    path: ./rule/Netflix.yaml
    url: "https://raw.githubusercontent.com/MoGuangYu/rules/main/Home/Netflix.yaml"
    interval: 86400
  Discord:
    type: http
    behavior: classical
    format: yaml
    path: ./rule/Discord.yaml
    url: "https://raw.githubusercontent.com/MoGuangYu/rules/main/Home/Discord.yaml"
    interval: 86400
rules:
  - DST-PORT,53,🌐 DNS_Hijack
  - AND,((PROCESS-NAME,mihomo),(NOT,((IN-TYPE,inner)))),REJECT
  - AND,((PROCESS-NAME,clash),(NOT,((IN-TYPE,inner)))),REJECT
  - PROCESS-NAME,com.netease.cloudmusic,🎹 网易音乐
  - RULE-SET,Discord,🎮 Discord
  - RULE-SET,TikTok,📸 TikTok
  - RULE-SET,YouTube,🎬 油管媒体
  - RULE-SET,Netflix,📹 奈飞媒体
  - RULE-SET,Facebook,📱 脸书社交
  - RULE-SET,OpenAI,🤖 OpenAI
  - RULE-SET,Google,📢 谷歌服务
  - RULE-SET,Apple,🍎 苹果服务
  - RULE-SET,Microsoft,Ⓜ️ 微软服务
  - RULE-SET,Telegram,📲 电报信息
  - GEOSITE,category-ads-all,🛑 广告拦截
  - GEOSITE,CN,🌎 全球直连
  - GEOIP,CN,🌎 全球直连,no-resolve
  - GEOIP,private,🌎 全球直连,no-resolve
  - MATCH,🐋 漏网之鱼
